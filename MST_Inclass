#include <stdio.h>
#include <stdbool.h>
#include <limits.h>

#define V 6

int minKey(int key[], bool mstSet[]) {
    int min = INT_MAX, min_index;

    for (int v = 0; v < V; v++) {
        if (mstSet[v] == false && key[v] < min) {
            min = key[v];
            min_index = v;
        }
    }

    return min_index;
}

void printMST(int parent[], int graph[V][V], int src) {
    printf("Edge \tWeight\n");
    int totalCost = 0;
    for (int i = 0; i < V; i++) {
        if (i != src) {
            printf("%d - %d \t%d \n", parent[i], i, graph[i][parent[i]]);
            totalCost += graph[i][parent[i]];
        }
    }
    printf("Total Wiring Cost: %d\n", totalCost);
}

void primMST(int graph[V][V], int src) {
    int parent[V];
    int key[V];
    bool mstSet[V];

    for (int i = 0; i < V; i++) {
        key[i] = INT_MAX;
        mstSet[i] = false;
    }

    key[src] = 0;
    parent[src] = -1;

    for (int count = 0; count < V; count++) {
        int u = minKey(key, mstSet);

        mstSet[u] = true;

        for (int v = 0; v < V; v++) {
            if (graph[u][v] && mstSet[v] == false && graph[u][v] < key[v]) {
                parent[v] = u;
                key[v] = graph[u][v];
            }
        }
    }

    printMST(parent, graph, src);
}

int main() {
    int graph[V][V] = {
            {0, 3, 0, 0, 0, 1},
            {3, 0, 2, 1, 10, 0},
            {0, 2, 0, 3, 0, 5},
            {0, 1, 3, 0, 5, 0},
            {0, 10, 0, 5, 0, 4},
            {1, 0, 5, 0, 4, 0}
    };

    int source = 0;
    primMST(graph, source);

    return 0;
}
